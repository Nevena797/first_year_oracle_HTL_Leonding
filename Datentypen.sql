/*Datentypen.sql*/

DROP TABLE T_CHAR;
CREATE TABLE T_CHAR(
CHAR_COLUMN CHAR(20),
VARCHAR2_COLUMN VARCHAR2(20)
);

INSERT INTO T_CHAR VALUES('Hello World','Hello World' );
INSERT INTO T_CHAR VALUES('12345678901234567890','12345678901234567890' );
SELECT * FROM T_CHAR;
SELECT LENGTH(CHAR_COLUMN),LENGTH(VARCHAR2_COLUMN) FROM T_CHAR;

--inplicite Datenkonvertierung(implicit conversion)
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World         ';--20 
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World                  ';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = '      Hello World          ';

SELECT * FROM T_CHAR WHERE CHAR_COLUMN =     '12345678901234567890';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN =     '12345678901234567890123';
/* 01756. 00000 -  "quoted string not properly terminated */
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = CAST('12345678901234567890123' AS CHAR(20));

SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = 'Hello World';
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = 'Hello World  ';
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = '    Hello World           ';

SELECT * FROM T_CHAR WHERE CHAR_COLUMN = VARCHAR2_COLUMN;
SELECT * FROM T_CHAR WHERE CAST(CHAR_COLUMN AS VARCHAR2(20))=VARCHAR2_COLUMN;
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = CAST(VARCHAR2_COLUMN AS CHAR(20));
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = CHAR_COLUMN;

SELECT '    Hello World       ',RTRIM('    Hello World     '),
LTRIM('   Hello World     '), TRIM('   Hello World     ') FROM DUAL;
SELECT * FROM T_CHAR WHERE TRIM(CHAR_COLUMN) = VARCHAR2_COLUMN; 

--right padding
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = RPAD(VARCHAR2_COLUMN,20 );
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = RPAD(VARCHAR2_COLUMN,LENGTH(CHAR_COLUMN));
--DELETE FROM T_CHAR WHERE CHAR_COLUMN='12345678901234567890';

SELECT CHAR_COLUMN, TRIM(CHAR_COLUMN), VARCHAR2_COLUMN, RPAD(VARCHAR2_COLUMN, 20 ) 
FROM T_CHAR WHERE CHAR_COLUMN = RPAD( VARCHAR2_COLUMN, 20 );

SELECT CHAR_COLUMN, TRIM(CHAR_COLUMN), VARCHAR2_COLUMN, RPAD(VARCHAR2_COLUMN, 20 ) 
FROM T_CHAR WHERE CHAR_COLUMN = RPAD( VARCHAR2_COLUMN, 20 );

SELECT LENGTH(CHAR_COLUMN),LENGTH(TRIM(CHAR_COLUMN)),LENGTH(VARCHAR2_COLUMN),
LENGTH(RPAD(VARCHAR2_COLUMN,20)) FROM T_CHAR;

--LIKE
SELECT * FROM T_CHAR WHERE CHAR_COLUMN LIKE '%rld         '; --20
SELECT * FROM T_CHAR WHERE CHAR_COLUMN LIKE 'rld';--20
SELECT * FROM T_CHAR WHERE CHAR_COLUMN LIKE '%rld%';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World                     ';

--Variable
VARIABLE VARCHAR2_BV VARCHAR2(20);
EXEC :VARCHAR2_BV := 'Hello World';
--SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = :VARCHAR2_BV;
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = : CHAR_BV; 

--Variable 2
VARIABLE CHAR_BV CHAR(20);
EXEC :CHAR_BV := 'Hello World';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = :CHAR_BV;
SELECT * FROM T_CHAR WHERE VARCAHR2_COLUMN = :CHAR_BV;

--RAW
-- wie viel speicher als string, wie viel als nummer
--siehe powerpoint
DROP TABLE T_RAW;
CREATE TABLE T_RAW
(RAW_COLUMN RAW(40),
VARCHAR2_COLUMN VARCHAR2(40)
);

SELECT * FROM DUAL;
SELECT SYS_GUID() FROM DUAL;
--372094932E87530CE0630100007F428E
INSERT INTO T_RAW VALUES(SYS_GUID(),SYS_GUID());
SELECT * FROM T_RAW;
--guid:=global unique identifier

SELECT RAW_COLUMN,DUMP(RAW_COLUMN,16),
VARCHAR2_COLUMN,DUMP(VARCHAR2_COLUMN,16) FROM T_RAW;
--SELECT RAW_COLUMN,DUMP(RAW_COLUMN,16) FROM T_RAW;

INSERT INTO T_RAW VALUES('0123456789abcdef', '0123456789abcdef' );
SELECT RAW_COLUMN,DUMP(RAW_COLUMN,10),VARCHAR2_COLUMN,DUMP(VARCHAR2_COLUMN,10)
FROM T_RAW;

--NUMBER vs. FLOAT
DROP TABLE T_NUM;
CREATE TABLE T_NUM
(NUM_COL NUMBER,
FLOAT_COL BINARY_FLOAT,
DBL_COL BINARY_DOUBLE
);
--SET NUMFORMAT 99999999999.99999999999;

INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
VALUES (    1234567890.0987654321,
            1234567890.0987654321,
            1234567890.0987654321 );
SELECT * FROM T_NUM;

INSERT INTO T_NUM(NUM_COL,FLOAT_COL,DBL_COL)
VALUES(    9999999999.9999999999, --10x 9 , 10x 9
            9999999999.9999999999,
            9999999999.9999999999 );
SELECT * FROM T_NUM;            
-- 9999999999,9999999999
--10000000000

INSERT INTO T_NUM ( NUM_COl, FLOAT_COL, DBL_COL )
VALUES (    1234567890123456789012345678 * 1e-130, -- 28 digits
            1234567890123456789012345678 * 1e-130,
            1234567890123456789012345678 * 1e-130);
SELECT * FROM T_NUM;
INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
--VALUES ( 1234567890123456789012345678 * 1e126,--ORA-01426: numeric overflow 10^125–10^126
--1234567890123456789012345678 * 1e126,--bis ungefahr FLOAT(126)
--1234567890123456789012345678 * 1e126);--bis ~10^308
INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
--VALUES ( 1234567890123456789012345678 * 1e126,--von 1 × 10?¹³? bis 9.99... × 10^125
--1234567890123456789012345678 * 1e126,
--1234567890123456789012345678 * 1e126);

INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
VALUES (    1234567890123456789012345678 * 1e39,--~10^125
            1234567890123456789012345678 * 1e39,
            1234567890123456789012345678 * 1e39);
            
SELECT * FROM T_NUM;
INSERT INTO T_NUM(NUM_COL,FLOAT_COL,DBL_COL)
VALUES ( 1234567890123456789012345678 * 1e38,--10?³?--numeric/integer
1234567890123456789012345678 * 1e38,--float
1234567890123456789012345678 * 1e38);--double
SELECT * FROM T_NUM;

--PRECISION and SCALE
DROP TABLE T_NUM;
CREATE TABLE T_NUM
(CHAR_COL VARCHAR2(10),
NUM50_COL NUMBER(5,0), -- 99 999
NUM52_COL NUMBER(5,2), -- 999,99
NUM5_2_COL NUMBER(5,-2) -- 9 999 900
);
INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES           ('12345',      12345,         0,          0);
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('123456',    123456,         0,          0);
SELECT  * FROM T_NUM;
--value larger than specified precision allowed for this column

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('12345',          0,    12345,           0);
SELECT * FROM T_NUM;
--ORA-01438: value larger than specified precision allowed for this column

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES           ('123.45',         0,    123.45,          0);
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('123.456',        0,   123.456,          0);
--NUMBER(5,2) will round it --123.46
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('123',            0,       123,          0);
--NUM52_COL will not be 123,00, it cut the 00 after ,
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('123.45',         0,         0,     123.45);
--NUM5_2_COL NUMBER(5,-2)--100 round down the wast two 123 ->100
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('56',             0,         0,         56);
--NUM5_2_COL NUMBER(5,-2) -> 100 rounded up 50 to 100
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('193.45',         0,         0,     193.45);
--NUM5_2_COL NUMBER(5,-2) -> 193,45 rounded up to 200
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('123.456',        0,         0,    123.456);
--NUM5_2_COL NUMBER(5,-2) -> 123.456 rounded down to 100
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL, NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('123456',         0,         0,     123456);
--NUM5_2_COL NUMBER(5,-2) -> 123456 rounded up to 123500
SELECT * FROM T_NUM;

INSERT INTO T_NUM (CHAR_COL,   NUM50_COL, NUM52_COL, NUM5_2_COL)
VALUES            ('12345678',         0,         0,   12345678);
--NUM5_2_COL NUMBER(5,-2)--ORA-01438:
--value larger than specified precision allowed for this column
SELECT * FROM T_NUM;

--NUMBER is always variable length
SELECT ROWNUM, ROWNUM*2, RPAD('9',ROWNUM*2,'9') FROM ALL_OBJECTS WHERE ROWNUM <= 14;
SELECT * FROM ALL_OBJECTS;

DROP TABLE T_NUM;
CREATE TABLE T_NUM(X NUMBER,Y NUMBER);
INSERT INTO T_NUM VALUES(X)--not enough values;
SELECT TO_NUMBER(RPAD('9',ROWNUM*2,'9'))
FROM ALL_OBJECTS
WHERE ROWNUM <=14;
SELECT * FROM T_NUM;

SELECT * FROM ALL_OBJECTS;
SELECT ROWNUM FROM DUAL;--1
SELECT ROWNUM FROM CUSTOMER;--table or view does not exists
SELECT ROWNUM,ROWNUM*2,'9',RPAD('9',rownum*2,'9') FROM ALL_OBJECTS WHERE ROWNUM<=14;

SELECT * FROM T_NUM;
UPDATE T_NUM SET Y = X + 1;
SET NUMFORMAT 99999999999999999999999999999; --30X 9
COLUMN V1 FORMAT 99;
COLUMN V2 FORMAT 99;
SELECT X, Y, VSIZE(X) SIZEX, VSIZE(Y) SIZEY
FROM T_NUM
ORDER BY X;

INSERT INTO T_NUM --(X,Y)
        -- 28x 9
VALUES (9999999999999999999999999999, 12345000000000000000000000000);
SELECT X, Y, VSIZE(X) V1, VSIZE(Y) V2
FROM T_NUM
ORDER BY X;

INSERT INTO T_NUM
        --38x 9 = max precision according to https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT1832
VALUES (99999999999999999999999999999999999999, 123450000000000000000000000000000000000);--1234...39xnumber-not ok
SELECT X, Y, VSIZE(X) V1, VSIZE(Y) V2
FROM T_NUM ORDER BY X;

INSERT INTO T_NUM 
        --37x 9
VALUES (9999999999999999999999999999999999999, 1234500000000000000000000000000000000000);
INSERT INTO T_NUM 
        --36x 9
VALUES (999999999999999999999999999999999999, 123450000000000000000000000000000000000);

SELECT X, LENGTH(TO_CHAR(X)), Y, LENGTH(TO_CHAR(Y)),
VSIZE(X) V1, VSIZE(Y) V2
FROM T_NUM ORDER BY X;

--FLOAT IS UNPRECISE
SELECT TO_CHAR( 3 + 1) FROM DUAL;
SELECT TO_CHAR( 3 + 1, '0.99999999999999' ) FROM DUAL; --14x 9
SELECT TO_CHAR( 0.3 + 0.1, '0.99999999999999' ) FROM DUAL; --14x 9
SELECT TO_CHAR( 3f + 1f, '0.99999999999999' ) FROM DUAL;
SELECT TO_CHAR( 0.3f + 0.1f, '0.99999999999999' ) FROM DUAL;

--Precision vs. Performance
DROP TABLE T_PERF;
CREATE TABLE T_PERF (
  NUM_TYPE     NUMBER,
  FLOAT_TYPE   BINARY_FLOAT,
  DOUBLE_TYPE  BINARY_DOUBLE
);
INSERT INTO T_PERF
SELECT ROWNUM, ROWNUM, ROWNUM
FROM ALL_OBJECTS;
COMMIT;

SET AUTOTRACE ON STATISTICS;
SET AUTOTRACE ON;
--F6 Autotrace
SELECT SUM(LN(NUM_TYPE)) FROM T_PERF; 
--CPU 136 - 8
SELECT SUM(LN(FLOAT_TYPE)) FROM T_PERF; 
--CPU 5 - 4
SELECT SUM(LN(DOUBLE_TYPE)) FROM T_PERF;
--CPU 5
SELECT SUM(LN(NUM_TYPE)) FROM T_PERF;

SELECT SUM(LN(CAST( NUM_TYPE AS BINARY_FLOAT ) )) FROM T_PERF; 
SELECT SUM(LN(CAST( NUM_TYPE AS BINARY_DOUBLE ) )) FROM T_PERF; 
SELECT SUM(LN(TO_BINARY_DOUBLE ( NUM_TYPE ) ))FROM T_PERF; 
--CPU 4

--DATE and TIME

DROP TABLE T_DATE;
CREATE TABLE T_DATE
(VARCHAR2_COLUMN VARCHAR2(20),
DATE_COLUMN DATE
);
ALTER SESSION SET NLS_DATE_FORMAT = 'yy-mm-dd hh24:mi:ss';
SELECT SYSDATE FROM DUAL;
ALTER SESSION SET NLS_DATE_FORMAT='yy-mm-dd hh:mi:ss pm';
INSERT INTO T_DATE (VARCHAR2_COLUMN, DATE_COLUMN) 
VALUES ('01-02-03', '01-02-03');
--2001-02-03, "2001-03-02", 2003-02-01, 2003-01-02
SELECT * FROM T_DATE;
SELECT VARCHAR2_COLUMN,
    TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd')
FROM T_DATE;

INSERT INTO T_DATE (VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '99-02-03', '99-02-03' );
SELECT VARCHAR2_COLUMN, TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;
INSERT INTO T_DATE ( VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '99-02-03', TO_DATE('99-02-03', 'yy-mm-dd') );
SELECT VARCHAR2_COLUMN, TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;

INSERT INTO T_DATE (VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '99-02-03', TO_DATE('1999-02-03', 'YYYY-MM-DD'));
SELECT VARCHAR2_COLUMN, DATE_COLUMN, 
TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;
ALTER SESSION SET NLS_DATE_FORMAT='yyyy-mm-dd hh:mi:ss pm';
SELECT * FROM T_DATE;

INSERT INTO T_DATE ( VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '2017-11-04', TO_DATE('2017-05-06', 'YYYY-MM-DD'));
SELECT * FROM T_DATE;

--CHANGE DAYS AND MONTHS IN DATENFORMAT
ALTER SESSION SET NLS_DATE_FORMAT='yy-dd-mm hh24:mi:ss';
INSERT INTO T_DATE ( VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '01-02-03', '01-02-03' );
SELECT VARCHAR2_COLUMN, TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;


--CHANGE DAY TO FRONT
ALTER SESSION SET NLS_DATE_FORMAT='dd-mm-yy hh24:mi:ss';
INSERT INTO T_DATE ( VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '01-02-03', '01-02-03' );
SELECT VARCHAR2_COLUMN, TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;
ALTER SESSION SET NLS_DATE_FORMAT='dd-mm-yy hh:mi:ss am';
INSERT INTO T_DATE ( VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( '01-02-03 11:59:59 pm', '01-02-03  11:59:59 pm' );

ALTER SESSION SET NLS_DATE_FORMAT='dd-mm-yy';
SELECT * FROM T_DATE;
ALTER SESSION SET NLS_DATE_FORMAT='dd-MON-yy';
SELECT SYSDATE FROM DUAL;

INSERT INTO T_DATE ( VARCHAR2_COLUMN, DATE_COLUMN ) 
VALUES ( TO_CHAR(SYSDATE, 'YYYY-MM-DD hh24:mi:ss'), SYSDATE );
SELECT * FROM T_DATE;

--
SELECT VARCHAR2_COLUMN, 
TO_CHAR(DATE_COLUMN, 'yyyy-Month-dd'),
TO_CHAR(DATE_COLUMN, 'fmyyyy-Month-dd'),
TO_CHAR(DATE_COLUMN, 'yyyy-Month-fmdd'),
TO_CHAR(DATE_COLUMN, 'yyyy-Month-d'),
TO_CHAR(DATE_COLUMN, 'fmyyyy-Month-dd', 'NLS_DATE_LANGUAGE=german') 
FROM T_DATE;

--Formating of Date
SELECT TO_CHAR (TO_DATE('01-01-2015', 'DD-MM-YYYY'), 'DD-MM-YYYY') AS TODAY FROM DUAL;
SELECT TO_CHAR (TO_DATE('01-01-2015', 'DD-MM-YYYY'), 'fmDD-MM-YYYY') AS TODAY FROM DUAL;
SELECT TO_CHAR (TO_DATE('01-01-2015', 'DD-MM-YYYY'), 'fmDD-fmMonth-YYYY') AS TODAY FROM DUAL;
SELECT TO_CHAR (TO_DATE('01-01-2015', 'DD-MM-YYYY'), 'fmDD. Month YYYY') AS TODAY FROM DUAL;
--

--Zeit-Arithmetik
ALTER SESSION SET NLS_DATE_FORMAT='yyyy-mm-dd hh24:mi:ss'; /*NLS National Language Support*/
SELECT SYSDATE, 
SYSDATE+1, SYSDATE+7,
SYSDATE+(1/24), SYSDATE+(1/24/60), SYSDATE+(1/24/60/60) 
,SYSDATE+(3/24), SYSDATE+0.5
FROM DUAL;
SELECT (1/24), (1/24/60), (1/24/60/60) FROM DUAL;

/*HOW TO CHECK THE NLS FORMAT IN ORACLE?*/
SELECT * FROM NLS_SESSION_PARAMETERS 
WHERE PARAMETER = 'NLS_DATE_FORMAT';
/*PARAMETER         VALUE
----------------- ----------
NLS_DATE_FORMAT   DD-MON-RR*/

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
SELECT SYSDATE FROM DUAL; --2025-06-13

INSERT INTO T_DATE (VARCHAR2_COLUMN, DATE_COLUMN)
VALUES ('99-02-03', TO_DATE('99-02-03', 'yy-mm-dd'));
SELECT TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;

INSERT INTO T_DATE (VARCHAR2_COLUMN, DATE_COLUMN)
VALUES ('99-02-03', TO_DATE('99-02-03', 'rr-mm-dd'));
SELECT TO_CHAR(DATE_COLUMN, 'yyyy-mm-dd') FROM T_DATE;

--------
SELECT SYSDATE,
    SYSDATE + NUMTODSINTERVAL(1,'day'),
    SYSDATE + NUMTODSINTERVAL(1,'hour'),
    SYSDATE + NUMTODSINTERVAL(1,'minute'),
    SYSDATE + NUMTODSINTERVAL(1,'second')
FROM DUAL;

SELECT SYSDATE, 
SYSDATE + NUMTODSINTERVAL(24,'hour'),
SYSDATE + NUMTODSINTERVAL(25,'hour'),
SYSDATE + NUMTODSINTERVAL(60,'minute'),
SYSDATE + NUMTODSINTERVAL(60,'second')
FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT = 'yy-mm-dd hh24:mi:ss';
SELECT SYSDATE, 
SYSDATE + 30, /* add 30 DAYS */
ADD_MONTHS(SYSDATE, 1 ), /*add one month*/
SYSDATE + 365, /*add 365 days*/
ADD_MONTHS(SYSDATE, 12 ), /*add exactly 12 Monts, exactly one year*/
SYSDATE + 5*365,/*add exactly 5 * 365 days*/
ADD_MONTHS(SYSDATE, 5*12 )/*add 5 years*/
FROM DUAL;

SELECT TO_DATE('2011-02-28', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2011-02-28', 'YYYY-MM-DD'), 1)
FROM DUAL;
SELECT TO_DATE('2011-02-27', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2011-02-27', 'YYYY-MM-DD'), 1)
FROM DUAL;
SELECT TO_DATE('2012-02-28', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2012-02-28', 'YYYY-MM-DD'), 1)
FROM DUAL;
SELECT TO_DATE('2012-02-29', 'YYYY-MM-DD'),
ADD_MONTHS(to_date('2012-02-29', 'YYYY-MM-DD'), 1)
FROM DUAL; 
SELECT TO_DATE('2012-03-31', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2012-03-31', 'YYYY-MM-DD'), -1)
FROM DUAL;
SELECT TO_DATE('2012-03-30', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2012-03-30', 'YYYY-MM-DD'), -1)
FROM DUAL;

SELECT TO_DATE('2011-02-28', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2011-02-28', 'YYYY-MM-DD'), 1),
TO_DATE('2011-02-28', 'YYYY-MM-DD') + NUMTOYMINTERVAL(1,'MONTH'),
TO_DATE('2011-02-28', 'YYYY-MM-DD')+ 30
FROM DUAL;

SELECT TO_DATE('2012-02-28', 'YYYY-MM-DD'),
ADD_MONTHS(TO_DATE('2012-02-28', 'YYYY-MM-DD'), 1),
TO_DATE('2012-02-28', 'YYYY-MM-DD')+ NUMTOYMINTERVAL(1,'MONTH'),
TO_DATE('2012-02-28', 'YYYY-MM-DD')+ 30
FROM DUAL;

--Datumsdifferenz
SELECT DT2-DT1 , /*380.430902777777777777777777777777777778*/
MONTHS_BETWEEN(DT2,DT1) MONTHS_BTWN,/*12.56228718637992831541218637992831541219*/
NUMTODSINTERVAL(DT2-DT1,'DAY') DAYS,/*+380 10:20:30.000000*/
NUMTOYMINTERVAL(MONTHS_BETWEEN(DT2,DT1),'MONTH') MONTHS,/*+01-01*/
NUMTOYMINTERVAL(TRUNC(MONTHS_BETWEEN(DT2,DT1)),'MONTH') MONTHS/*+01-00*/
FROM (SELECT 
TO_DATE('29-02-2000 01:02:03','dd-mm-yyyy hh24:mi:ss') AS DT1,
TO_DATE('15-03-2001 11:22:33','dd-mm-yyyy hh24:mi:ss') AS DT2
FROM DUAL );

--YM + DS
SELECT 
NUMTOYMINTERVAL(TRUNC(MONTHS_BETWEEN(DT2,DT1)),'MONTH') ZEARS_MONTHS,/*+01-00*/
NUMTODSINTERVAL(DT2-ADD_MONTHS( DT1, TRUNC(MONTHS_BETWEEN(DT2,DT1)) ),'DAY' ) D_HOURS/*+01-00*/
FROM (SELECT 
TO_DATE('29-02-2000 01:02:03','dd-mm-yyyy hh24:mi:ss') DT1,
TO_DATE('15-03-2001 11:22:33','dd-mm-yyyy hh24:mi:ss') DT2
FROM DUAL );

--TIMESTAMP INTERVAL

SELECT 
  DT2 - DT1 AS DIFF /*INTERVAL DAY TO SECOND*/
FROM (
  SELECT 
    TO_TIMESTAMP('29-02-2000 01:02:03.122000', 'DD-MM-YYYY HH24:MI:SS.FF') AS DT1,
    TO_TIMESTAMP('15-03-2001 11:22:33.000000', 'DD-MM-YYYY HH24:MI:SS.FF') AS DT2 
  FROM DUAL
);

SELECT DT2-DT1
FROM (SELECT  TO_TIMESTAMP('29-feb-2000 ',
'dd-mon-yyyy hh24:mi:ss.ff') DT1,
TO_TIMESTAMP('15-mar-2001 11:22:33.000000',
'dd-mon-yyyy hh24:mi:ss.ff') DT2
FROM DUAL );

SELECT NUMTOYMINTERVAL
(TRUNC(MONTHS_BETWEEN(DT2,DT1)),'MONTH')
YEARS_MONTHS,
DT2-ADD_MONTHS(DT1,TRUNC(MONTHS_BETWEEN(DT2,DT1)))
DAY_HOURS
FROM (SELECT TO_TIMESTAMP('29-feb-2000 01:02:03.122000',
'dd-mon-yyyy hh24:mi:ss.ff') DT1,
TO_TIMESTAMP('15-mar-2001 11:22:33.000000',
'dd-mon-yyyy hh24:mi:ss.ff') DT2
FROM DUAL );

--TIMESTAMP WITH TIME ZONE Type
--s. Expert Oracle Database Architecture, 2nd Edition, 534ff
DROP TABLE T_TIMEZONE;
CREATE TABLE T_TIMEZONE
(
TS TIMESTAMP,
TS_TZ TIMESTAMP WITH TIME ZONE
);

INSERT INTO T_TIMEZONE VALUES (SYSTIMESTAMP, SYSTIMESTAMP);
SELECT * FROM T_TIMEZONE;
SELECT SYSTIMESTAMP, TS, DUMP(TS), TS_TZ, DUMP(TS_TZ) FROM T_TIMEZONE;
/*
20-DEC-17 08.16.34.620274000 PM +01:00
Typ=181 Len=13: 120,117,12,20,20,17,35,36,248,161,80,21,60
                c  ,y  ,m , d, h,m?,s?, 
(c-100)*100 = (120-100)*100 = 2000
(y-100)     = (117-100)     =   17
*/

/*
SELECT mit einem Ausdruck
'2017-12-20' -> '2017-12-31'
'2017-11-01' -> '2017-11-30'
;
*/

SELECT DBTIMEZONE,SESSIONTIMEZONE,CURRENT_DATE FROM DUAL;
SELECT DBTIMEZONE,SESSIONTIMEZONE,CURRENT_TIMESTAMP FROM DUAL;
SELECT DBTIMEZONE,SESSIONTIMEZONE,LOCALTIMESTAMP FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT = 'YY-MM-DD HH24:MI:SS';
ALTER SESSION SET NLS_DATE_FORMAT='yy-mon-dd hh24:mi:ss';

SELECT TO_DATE('2021-10-21','YYYY-MM-DD') FROM DUAL;/*21-oct-21 00:00:00*/
SELECT TO_CHAR(TO_DATE('2021-10-21','YYYY-MM-DD'),'YYYY/MM/DD') FROM DUAL;

SELECT TO_DATE('2021-OCT-21','YYYY-MONTH-DD') FROM DUAL;
SELECT TO_DATE('2021-OCT-21','YYYY-MON-DD') FROM DUAL;
SELECT TO_DATE('2021-10-21', 'YYYY-MONTH-DD') from dual;-- "not a valid month"
SELECT TO_CHAR(TO_DATE('2021-10-21','YYYY-MM-DD'),'YYYY/MONTH/DD') FROM DUAL; --2021/OCTOBER  /21

ALTER SESSION SET NLS_DATE_FORMAT = 'YY-MM-DD HH24:MI:SS';
SELECT TO_DATE('01-02-03') FROM DUAL; /*01-02-03 00:00:00*//*NO FIX FORMAT IN TO_DATE*/
ALTER SESSION SET NLS_DATE_FORMAT = 'MM-DD-YY HH24:MI:SS';
SELECT TO_DATE('01-02-03') FROM DUAL;/*01-02-03 00:00:00*/

SELECT TO_DATE('01-02-03', 'yy-mm-dd') FROM DUAL;
SELECT TO_CHAR(TO_DATE('01-02-03', 'yy-mm-dd'), 'dd/mm/yy') FROM DUAL;

CREATE TABLE DATE_TABLE
(VARCHAR_COL VARCHAR2(20),
DATE_COL DATE);

ALTER SESSION SET NLS_DATE_FORMAT='mm-dd-yy hh24:mi:ss';
INSERT INTO DATE_TABLE VALUES('01-02-03', '01-02-03');
SELECT * FROM DATE_TABLE;

ALTER SESSION SET NLS_DATE_FORMAT='dd-mm-yy hh24:mi:ss';
INSERT INTO DATE_TABLE VALUES('01-02-03', '01-02-03');
SELECT * FROM DATE_TABLE;

ALTER SESSION NLS_DATE_FORMAT='yy-mm-dd hh24:mi:ss';
INSERT INTO DATE_TABLE VALUES('01-02-03', '01-02-03');
SELECT VARCHAR_COL, DATE_COL, DUMP(DATE_COL) FROM DATE_TABLE;

