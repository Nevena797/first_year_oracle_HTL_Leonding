/*Übung 7*/
/*zu den Tennisclubtabellen */

/*1. Ausgabe der Spielernamen, die sowohl für das Team 1 als auch für das
Team 2 gespielt haben*/

SELECT * FROM PLAYERS;
SELECT * FROM MATCHES;

SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 1;
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 2;

SELECT * 
FROM PLAYERS P
JOIN MATCHES M
ON P.PLAYERNO = M.PLAYERNO;


SELECT T1.PLAYERNO
    FROM MATCHES T1
    JOIN MATCHES T2
ON T2.PLAYERNO = T1.PLAYERNO
AND T2.TEAMNO = 2
WHERE T1.TEAMNO = 1;

SELECT 
    PL.PLAYERNO,
    PL.NAME,
    PL.INITIALS
FROM PLAYERS PL
JOIN MATCHES T1 ON T1.PLAYERNO=PL.PLAYERNO
JOIN MATCHES T2 ON T2.PLAYERNO = T1.PLAYERNO 
AND T2.TEAMNO = 2
WHERE T1.TEAMNO = 1;

SELECT
    PL.PLAYERNO,
    PL.NAME,
    PL.INITIALS
FROM PLAYERS PL
WHERE
    EXISTS (SELECT 1 FROM MATCHES T1 WHERE T1.PLAYERNO = PL.PLAYERNO AND T1.TEAMNO = 1)
    AND
    EXISTS (SELECT 1 FROM MATCHES T2 WHERE T2.PLAYERNO = PL.PLAYERNO AND T2.TEAMNO = 2);

    
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 1
INTERSECT
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 2;

---HERE COUD BE MORE MISTAKES  
SELECT PL.PLAYERNO, PL.NAME, PL.INITIALS 
FROM MATCHES T1 
JOIN PLAYERS PL ON PL.PLAYERNO = T1.PLAYERNO 
INTERSECT 
SELECT PL.PLAYERNO, PL.NAME, PL.INITIALS 
FROM MATCHES T2 
JOIN PLAYERS PL ON PL.PLAYERNO = T2.PLAYERNO;


--HERE IS IS OK
SELECT PL.PLAYERNO,
        PL.NAME,
        PL.INITIALS
FROM PLAYERS PL
WHERE PL.PLAYERNO IN (
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 1
INTERSECT --SET OPERATOR
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 2
);



---SET OPERATOREN

/*Diese Abfrage verwendet UNION statt INTERSECT und gibt Spieler zurück, die für Team 1 ODER Team 2 (oder beide) gespielt haben*/

SELECT PL.PLAYERNO,
            PL.NAME,
            PL.INITIALS
FROM PLAYERS PL
WHERE PL.PLAYERNO IN (
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 1
UNION --SET OPERATOR
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 2
);

/*Diese Abfrage verwendet UNION ALL, wodurch alle Zeilen aus beiden Sätzen zurückgegeben werden, 
einschließlich Duplikaten. 
Dies bedeutet, dass die Nummer eines Spielers, der für beide Teams gespielt hat, zweimal im Ergebnissatz erscheint.*/
        
SELECT PL.PLAYERNO,
        PL.NAME,
        PL.INITIALS
FROM PLAYERS PL 
WHERE PL.PLAYERNO IN (
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 1
UNION ALL --SET OPERATOR
SELECT PLAYERNO FROM MATCHES WHERE TEAMNO = 2
);    

/*02 NAME und INITIALS der Spieler, die 1980 keine Strafe erhalten haben */

SELECT PL.NAME,PL.INITIALS FROM PLAYERS PL;
SELECT * FROM PENALTIES;

-- aber irgendwann eine Strafe bezahlt haben

SELECT DISTINCT PL.NAME,
                PL.INITIALS
FROM PLAYERS PL
JOIN PENALTIES PE
ON PE.PLAYERNO = PL.PLAYERNO
WHERE TO_CHAR(PE.PEN_DATE,'YYYY') <> 2000;
            
-- aber vielleicht nie eine Strafe bezahlt haben

SELECT DISTINCT PL.NAME,
                PL.INITIALS
FROM PLAYERS PL
LEFT JOIN PENALTIES PE
ON PE.PLAYERNO= PL.PLAYERNO
WHERE TO_CHAR(PE.PEN_DATE,'YYYY') <> 2000 OR PE.PEN_DATE IS NULL;


SELECT DISTINCT PL.NAME,
                PL.INITIALS
FROM PLAYERS PL
LEFT JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
WHERE (PE.PEN_DATE IS NULL
OR EXTRACT(YEAR FROM PE.PEN_DATE) <> 2000); 

SELECT DISTINCT 
EXTRACT(YEAR FROM PEN_DATE) AS YEAR_ONLY
FROM PENALTIES;

/*
3. Ausgabe der Spieler, die mindestens eine Strafe über $80 erhalten haben
*/

SELECT * FROM PLAYERS;
SELECT * FROM PENALTIES;
  
SELECT * FROM PENALTIES
WHERE AMOUNT > 80;
           
SELECT * 
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
WHERE AMOUNT > 80;

/*4. Ausgabe der Spieler, bei denen jede Strafe über $80 lag */

SELECT PLAYERNO FROM PENALTIES
WHERE AMOUNT > 80
MINUS
SELECT PLAYERNO FROM PENALTIES
WHERE AMOUNT <= 80;

SELECT PL.PLAYERNO,PL.NAME
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
GROUP BY PL.PLAYERNO,PL.NAME
HAVING MIN(PE.AMOUNT) > 80;


SELECT PLAYERNO
FROM PENALTIES
WHERE PLAYERNO NOT IN (
SELECT PLAYERNO FROM PENALTIES
WHERE AMOUNT <= 80
);

/*zu EMP-DEPT */

/*5. Gesucht sind alle Mitarbeiter, deren Gehalt höher ist als das Durchschnittsgehalt
ihrer Abteilung */

SELECT * FROM EMP;

SELECT DEPTNO,
    AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

SELECT *
FROM EMP E
WHERE E.SAL > (
SELECT 
    AVG(S.SAL) Durchschnittsgehalt
FROM EMP S
WHERE S.DEPTNO = e.DEPTNO
GROUP BY S.DEPTNO
);

WITH Avg_Salaries AS (
  SELECT DEPTNO,
         AVG(SAL) AS AVG_SAL
  FROM EMP
  GROUP BY DEPTNO
)

SELECT E.*
FROM EMP E
JOIN Avg_Salaries A
  ON E.DEPTNO = A.DEPTNO
WHERE E.SAL > A.AVG_SAL;

/*
6. Ermittlung aller Abteilungen, die mindestens einen Mitarbeiter haben
*/

SELECT * FROM EMP;
SELECT DISTINCT DEPTNO FROM DEPT;

SELECT DISTINCT(D.DEPTNO),
        D.DNAME,
        D.LOC
FROM DEPT D
JOIN EMP E
ON E.DEPTNO = D.DEPTNO;

SELECT DISTINCT D.DEPTNO,
       D.DNAME,
       D.LOC,
       COUNT(*)
FROM DEPT D
JOIN EMP E
ON E.DEPTNO = D.DEPTNO
GROUP BY D.DEPTNO,D.DNAME,D.LOC
HAVING COUNT(*) >= 1;

/*7. Ausgabe aller Abteilungen, die mindestens einen Mitarbeiter aufweisen, der
über 1000,- verdient*/

SELECT * FROM EMP;


SELECT DEPTNO
FROM EMP
--WHERE SAL > 1000
GROUP BY DEPTNO
HAVING MAX(SAL)>1000;

SELECT DISTINCT DEPTNO
FROM EMP
WHERE SAL > 1000;

/*8. Ausgabe aller Abteilungen, in der jeder Mitarbeiter mindestens 1000,- verdient*/

SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT *
FROM EMP
WHERE SAL >= 1000;

SELECT DEPTNO,DNAME
FROM DEPT D
WHERE NOT EXISTS(
SELECT 1
FROM EMP E 
WHERE E.DEPTNO = D.DEPTNO
AND E.SAL < 1000
);

SELECT D.DEPTNO, D.DNAME
FROM DEPT D
JOIN EMP E
  ON D.DEPTNO = E.DEPTNO
GROUP BY D.DEPTNO,D.DNAME
HAVING MIN(E.SAL) >= 1000;

SELECT * FROM EMP;

SELECT DEPTNO
FROM EMP
GROUP BY DEPTNO
HAVING MIN(SAL) >= 1000;





