/*Übung 5 Tennis-Abfragen */ 

/*1. Anzahl der Neuzugänge pro Jahr */

SELECT * FROM PLAYERS;

SELECT COUNT(*)
FROM PLAYERS;

SELECT YEAR_JOINED
FROM PLAYERS;

SELECT 
    YEAR_JOINED,
    COUNT(*)
FROM PLAYERS;--> FEHLER NOT A SINGLE-GROUP FUNCTION

/*-> das ist richtig*/
SELECT
    YEAR_JOINED,
    COUNT(*)
FROM PLAYERS
GROUP BY YEAR_JOINED
ORDER BY YEAR_JOINED;

SELECT DISTINCT YEAR_JOINED
FROM PLAYERS
GROUP BY YEAR_JOINED;

/*2. Anzahl und durchschnittliche Höhe der Strafen pro Spieler */

SELECT * FROM PLAYERS;
SELECT * FROM PENALTIES;

SELECT * FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO;

SELECT PL.PLAYERNO,
           PL.NAME,
           PL.INITIALS,
           COUNT(*) AS "Anzahl",
           AVG(AMOUNT) AS "Durchschn. Strafe"
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
GROUP BY PL.PLAYERNO,PL.NAME,PL.INITIALS
ORDER BY PL.PLAYERNO,PL.NAME,PL.INITIALS;

SELECT * FROM PLAYERS
ORDER BY NAME DESC,INITIALS DESC; // REVERSED ORDER COLUMN

SELECT * FROM PLAYERS 
ORDER BY NAME, INITIALS; // ASSENDING ORDER COLUMN NAME

SELECT * FROM  PLAYERS
ORDER BY INITIALS, NAME;// ASSENDING ORDER COLUMN INITIALS

/*3. Anzahl der Strafen für die Jahre vor 1983 */

SELECT * FROM PENALTIES;

SELECT TO_CHAR(PEN_DATE,'YYYY') AS Jahr,
        count(*) 
FROM PENALTIES
WHERE PEN_DATE < TO_DATE('2003-01-01','YYYY-MM-DD')
GROUP BY TO_CHAR(PEN_DATE,'YYYY');

/*4. In welchen Städten leben mehr als 4 Spieler*/

SELECT * FROM PLAYERS;

SELECT TOWN,
COUNT(*)
FROM PLAYERS
GROUP BY TOWN
HAVING COUNT(*) > 4;

/*5. PLAYERNO derjenigen Spieler, deren Strafensumme über 150 liegt*/

SELECT * FROM PENALTIES;

SELECT PLAYERNO,
        SUM(AMOUNT)
FROM PENALTIES
GROUP BY PLAYERNO
HAVING SUM(AMOUNT) > 150;

/*6. NAME und INITIALS derjenigen Spieler, die mehr als eine Strafe erhalten haben */

SELECT * FROM PLAYERS;

SELECT * FROM PENALTIES;

SELECT PLAYERNO,
        COUNT(*)
FROM PLAYERS
GROUP BY PLAYERNO;


SELECT PL.NAME,
    PL.INITIALS,
    COUNT(*)
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
GROUP BY PL.NAME,PL.INITIALS
HAVING COUNT(*) > 1;
        
        
/*7. In welchen Jahren gab es genau 2 Strafen */ 

SELECT * FROM PENALTIES;

SELECT TO_CHAR(PEN_DATE,'YYYY') Jahr,
        COUNT(*)
FROM PENALTIES
GROUP BY TO_CHAR(PEN_DATE,'YYYY')
HAVING COUNT(*) = 2;
    
    
/*8. NAME und INITIALS der Spieler, die 2 oder mehr Strafen über $40 erhalten
haben */

SELECT * FROM PLAYERS;
SELECT * FROM PENALTIES;

SELECT PL.NAME,
        PL.INITIALS,
        COUNT(*)
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
GROUP BY PL.NAME,PL.INITIALS
HAVING COUNT(*) > = 2 AND SUM(AMOUNT) > 40;

SELECT PL.NAME,
        PL.INITIALS,
        PE.AMOUNT,
        COUNT(*)
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
WHERE AMOUNT > 40
GROUP BY PL.NAME,PL.INITIALS,PE.AMOUNT;
--having count(*) >=2
--and sum(amount)>40;

SELECT 
    PL.NAME,
    PL.INITIALS,
    COUNT(*) AS PENALTY_COUNT,
    SUM(PE.AMOUNT) AS TOTAL_AMOUNT
FROM PLAYERS PL
JOIN PENALTIES PE
ON PL.PLAYERNO = PE.PLAYERNO
GROUP BY PL.NAME, PL.INITIALS
HAVING COUNT(*) >= 2 AND SUM(PE.AMOUNT) > 40;


/*9. NAME und INITIALS des Spielers mit der höchsten Strafensumme*/

SELECT * FROM PLAYERS;
SELECT * FROM PENALTIES;

SELECT PLAYERNO, SUM(AMOUNT) AS AMOUNT
FROM PENALTIES PE
GROUP BY PLAYERNO
HAVING SUM(AMOUNT) = (
SELECT MAX(S_AMOUNT) FROM (
SELECT PLAYERNO,SUM(AMOUNT) as s_amount
FROM PENALTIES PE
GROUP BY PLAYERNO)
);

SELECT PL.NAME, PL.INITIALS, SUM(PE.AMOUNT) AS AMOUNT
FROM PENALTIES PE
JOIN PLAYERS PL ON PL.PLAYERNO=PE.PLAYERNO
GROUP BY PL.NAME, PL.INITIALS
HAVING SUM(PE.AMOUNT)=(
--175
SELECT MAX(S_AMOUNT) FROM
(--6,100,27
SELECT PLAYERNO, SUM(AMOUNT) AS S_AMOUNT
FROM PENALTIES PE
GROUP BY PLAYERNO
)
)
;

/*10. In welchem Jahr gab es die meisten Strafen und wie viele waren es*/

SELECT * FROM PENALTIES;

SELECT TO_CHAR(PEN_DATE,'YYYY') PEN_YEAR,COUNT(*) Anzahl
FROM PENALTIES
GROUP BY TO_CHAR(PEN_DATE,'YYYY');

--2.Max Strafenyahl aus den Jahren

SELECT MAX(Anzahl) AS MAXANZAHL FROM (
SELECT TO_CHAR(PEN_DATE,'YYYY') PEN_YEAR, COUNT(*) ANZAHL
FROM PENALTIES
GROUP BY TO_CHAR(PEN_DATE,'YYYY'));

SELECT TO_CHAR(PEN_DATE, 'YYYY') AS PEN_YEAR, COUNT(*) AS ANZAHL
FROM PENALTIES
GROUP BY TO_CHAR(PEN_DATE, 'YYYY')
HAVING COUNT(*) = (
    SELECT MAX(ANZAHL) 
    FROM (
        SELECT TO_CHAR(PEN_DATE, 'YYYY') AS PEN_YEAR, COUNT(*) AS ANZAHL
        FROM PENALTIES
        GROUP BY TO_CHAR(PEN_DATE, 'YYYY')
    )
);

/*11.PLAYERNO, TEAMNO, WON - LOST sortiert nach letzterem*/

SELECT * FROM PENALTIES;
SELECT * FROM TEAMS;
SELECT * FROM MATCHES;

SELECT PLAYERNO,TEAMNO,WON-LOST
FROM MATCHES
ORDER BY WON-LOST;



/*Übung 5 Tennis-Abfragen zu EMP-DEPT*/ 

/*12.Ausgabe aller Mitarbeiter aus Abteilung 30 geordnet nach ihrem Gehalt beginnend
mit dem höchsten Gehalt */

SELECT * FROM EMP

SELECT * FROM EMP WHERE DEPTNO = 30; 

SELECT * FROM EMP 
WHERE DEPTNO = 30
ORDER BY SAL DESC;

/*13.Ausgabe aller Mitarbeiter geordnet nach Job und innerhalb des Jobs nach
ihrem Gehalt*/

SELECT * FROM EMP
ORDER BY JOB, SAL;

--andere Rehenfolge -> anderes Ergebnis
SELECT * FROM EMP
ORDER BY SAL, ENAME DESC;

/*14.Ausgabe aller Mitarbeiter geordnet nach ihrem Anstellungsjahr absteigend
und innerhalb des Jahres nach ihrem Namen */

SELECT * FROM EMP
ORDER BY TO_CHAR(HIREDATE,'YYYY') DESC,ENAME;

SELECT ENAME, TO_CHAR(HIREDATE,'YYYY') HireYear
FROM EMP
ORDER BY HireYear DESC, ENAME;

/*15.Ausgabe aller Verkäufer in absteigender Reihenfolge bezüglich dem Verhältnis
Provision zu Gehalt */

SELECT * FROM EMP
WHERE JOB = 'SALESMAN'
ORDER BY COMM / SAL;

SELECT ENAME,JOB,SAL,COMM,ROUND(COMM/SAL,'90')
FROM EMP WHERE JOB='SALESMAN';

SELECT ENAME,
        JOB,
        SAL,
        COMM,
        TO_CHAR(NVL(COMM/SAL,0) * 100,'900.000') || '%' PROVISIONSGEHALTVERHALTNIS 
FROM EMP
WHERE JOB = 'SALESMAN';

SELECT ENAME,
        JOB,
        SAL,
        COMM,
--COMM/SAL,
--TO_CHAR(COMM/SAL)'90.00'),
--TO_CHAR(COMM/SAL,0) '90.00'),
--TO_CHAR(NVL(COMM/SAL,0) * 100,'990.00') || '%' PROVISIONSGEHALTVERHAELTNIS_1
TO_CHAR(NVL(COMM/SAL,0) +0.2,'990.00') || '%' PROVISIONSGEHALTVERHAELTNIS_2
FROM EMP
WHERE JOB = 'SALESMAN'
ORDER BY PROVISIONSGEHALTVERHAELTNIS_1 DESC;


/*16.Ausgabe des Durchschnittsgehalts zu jeder Abteilungsnummer*/

SELECT DEPTNO, AVG(SAL) FROM EMP
GROUP BY DEPTNO;

/*17.Berechne die durchschnittlichen Jahresgehälter derjenigen Jobs, die von
mehr als 2 Mitarbeitern ausgeführt werden */

SELECT JOB,COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(*) > 2;

/*18.Ausgabe aller Abteilungsnummern mit mindestens 2 Büroangestellten*/

SELECT * FROM EMP;

SELECT DEPTNO,
        COUNT(*) 
FROM EMP
WHERE JOB = 'CLERK'
GROUP BY DEPTNO;

SELECT DEPTNO,
        COUNT(*)
FROM EMP
WHERE JOB = 'CLERK'
GROUP BY DEPTNO
HAVING COUNT(*) >= 2;
    

/*19.Gesucht ist der durchschnittliche Wert für Gehalt und Provision aller Mitarbeiter
aus Abteilung 30*/

SELECT SUM(SAL) SAL,
SUM(COMM) COMM,
SUM(SAL)+ SUM(COMM) GesamtGehalt,
       SUM(SAL+COMM) GesamtGehalt2,
       SUM(SAL + NVL(COMM, 0)) GesamtGehalt2 
FROM EMP;
 
SELECT AVG(SAL+NVL(COMM, 0)) DurschnittGehalt 
FROM EMP WHERE DEPTNO = 30;    
