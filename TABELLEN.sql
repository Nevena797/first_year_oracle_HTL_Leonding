/*Datentypen.sql*/

DROP TABLE T_CHAR;
CREATE TABLE T_CHAR(
CHAR_COLUMN CHAR(20),
VARCHAR2_COLUMN VARCHAR2(20)
);

INSERT INTO T_CHAR VALUES('Hello World','Hello World' );
INSERT INTO T_CHAR VALUES('12345678901234567890','12345678901234567890' );
SELECT * FROM T_CHAR;
SELECT LENGTH(CHAR_COLUMN),LENGTH(VARCHAR2_COLUMN) FROM T_CHAR;

--inplicite Datenkonvertierung(implicit conversion)
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World         ';--20 
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World                  ';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = '      Hello World          ';

SELECT * FROM T_CHAR WHERE CHAR_COLUMN =     '12345678901234567890';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN =     '12345678901234567890123';
/* 01756. 00000 -  "quoted string not properly terminated */
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = CAST('12345678901234567890123' AS CHAR(20));

SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = 'Hello World';
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = 'Hello World  ';
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = '    Hello World           ';

SELECT * FROM T_CHAR WHERE CHAR_COLUMN = VARCHAR2_COLUMN;
SELECT * FROM T_CHAR WHERE CAST(CHAR_COLUMN AS VARCHAR2(20))=VARCHAR2_COLUMN;
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = CAST(VARCHAR2_COLUMN AS CHAR(20));
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = CHAR_COLUMN;

SELECT '    Hello World       ',RTRIM('    Hello World     '),
LTRIM('   Hello World     '), TRIM('   Hello World     ') FROM DUAL;
SELECT * FROM T_CHAR WHERE TRIM(CHAR_COLUMN) = VARCHAR2_COLUMN; 

--right padding
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = RPAD(VARCHAR2_COLUMN,20 );
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = RPAD(VARCHAR2_COLUMN,LENGTH(CHAR_COLUMN));
--DELETE FROM T_CHAR WHERE CHAR_COLUMN='12345678901234567890';

SELECT CHAR_COLUMN, TRIM(CHAR_COLUMN), VARCHAR2_COLUMN, RPAD(VARCHAR2_COLUMN, 20 ) 
FROM T_CHAR WHERE CHAR_COLUMN = RPAD( VARCHAR2_COLUMN, 20 );

SELECT CHAR_COLUMN, TRIM(CHAR_COLUMN), VARCHAR2_COLUMN, RPAD(VARCHAR2_COLUMN, 20 ) 
FROM T_CHAR WHERE CHAR_COLUMN = RPAD( VARCHAR2_COLUMN, 20 );

SELECT LENGTH(CHAR_COLUMN),LENGTH(TRIM(CHAR_COLUMN)),LENGTH(VARCHAR2_COLUMN),
LENGTH(RPAD(VARCHAR2_COLUMN,20)) FROM T_CHAR;

--LIKE
SELECT * FROM T_CHAR WHERE CHAR_COLUMN LIKE '%rld         '; --20
SELECT * FROM T_CHAR WHERE CHAR_COLUMN LIKE 'rld';--20
SELECT * FROM T_CHAR WHERE CHAR_COLUMN LIKE '%rld%';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World                     ';

--Variable
VARIABLE VARCHAR2_BV VARCHAR2(20);
EXEC :VARCHAR2_BV := 'Hello World';
--SELECT * FROM T_CHAR WHERE CHAR_COLUMN = 'Hello World';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = :VARCHAR2_BV;
SELECT * FROM T_CHAR WHERE VARCHAR2_COLUMN = : CHAR_BV; 

--Variable 2
VARIABLE CHAR_BV CHAR(20);
EXEC :CHAR_BV := 'Hello World';
SELECT * FROM T_CHAR WHERE CHAR_COLUMN = :CHAR_BV;
SELECT * FROM T_CHAR WHERE VARCAHR2_COLUMN = :CHAR_BV;

--RAW
-- wie viel speicher als string, wie viel als nummer
--siehe powerpoint
DROP TABLE T_RAW;
CREATE TABLE T_RAW
(RAW_COLUMN RAW(40),
VARCHAR2_COLUMN VARCHAR2(40)
);

SELECT * FROM DUAL;
SELECT SYS_GUID() FROM DUAL;
--372094932E87530CE0630100007F428E
INSERT INTO T_RAW VALUES(SYS_GUID(),SYS_GUID());
SELECT * FROM T_RAW;
--guid:=global unique identifier

SELECT RAW_COLUMN,DUMP(RAW_COLUMN,16),
VARCHAR2_COLUMN,DUMP(VARCHAR2_COLUMN,16) FROM T_RAW;
--SELECT RAW_COLUMN,DUMP(RAW_COLUMN,16) FROM T_RAW;

INSERT INTO T_RAW VALUES('0123456789abcdef', '0123456789abcdef' );
SELECT RAW_COLUMN,DUMP(RAW_COLUMN,10),VARCHAR2_COLUMN,DUMP(VARCHAR2_COLUMN,10)
FROM T_RAW;

--NUMBER vs. FLOAT
DROP TABLE T_NUM;
CREATE TABLE T_NUM
(NUM_COL NUMBER,
FLOAT_COL BINARY_FLOAT,
DBL_COL BINARY_DOUBLE
);
--SET NUMFORMAT 99999999999.99999999999;

INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
VALUES (    1234567890.0987654321,
            1234567890.0987654321,
            1234567890.0987654321 );
SELECT * FROM T_NUM;

INSERT INTO T_NUM(NUM_COL,FLOAT_COL,DBL_COL)
VALUES(    9999999999.9999999999, --10x 9 , 10x 9
            9999999999.9999999999,
            9999999999.9999999999 );
SELECT * FROM T_NUM;            
-- 9999999999,9999999999
--10000000000

INSERT INTO T_NUM ( NUM_COl, FLOAT_COL, DBL_COL )
VALUES (    1234567890123456789012345678 * 1e-130, -- 28 digits
            1234567890123456789012345678 * 1e-130,
            1234567890123456789012345678 * 1e-130);
SELECT * FROM T_NUM;
INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
--VALUES ( 1234567890123456789012345678 * 1e126,--ORA-01426: numeric overflow 10^125–10^126
--1234567890123456789012345678 * 1e126,--bis ungefahr FLOAT(126)
--1234567890123456789012345678 * 1e126);--bis ~10^308
INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
--VALUES ( 1234567890123456789012345678 * 1e126,--von 1 × 10⁻¹³⁰ bis 9.99... × 10^125
--1234567890123456789012345678 * 1e126,
--1234567890123456789012345678 * 1e126);

INSERT INTO T_NUM ( NUM_COL, FLOAT_COL, DBL_COL )
VALUES (    1234567890123456789012345678 * 1e39,--~10^125
            1234567890123456789012345678 * 1e39,
            1234567890123456789012345678 * 1e39);
            
SELECT * FROM T_NUM;
INSERT INTO T_NUM(NUM_COL,FLOAT_COL,DBL_COL)
VALUES ( 1234567890123456789012345678 * 1e38,
1234567890123456789012345678 * 1e38,
1234567890123456789012345678 * 1e38);
SELECT * FROM T_NUM;












